image: php:7.1.3
cache:
  paths:
  - var/

before_script:
- 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
- mkdir -p ~/.ssh
- eval $(ssh-agent -s)
- ssh-add <(echo "$SERVER_PRIVATE_KEY")
- '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

services:
  - docker:dind

variables:
  - PASS: "-p"$MYSQL_PASS

stages:
#- test
- server_config
- deploy

test:
  stage: test
  script:
  - apt-get update -yqq
  - apt-get install -yqq git libmcrypt-dev libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev
  - docker-php-ext-install mbstring mcrypt pdo_pgsql curl json intl gd xml zip bz2 opcache
  - pecl install xdebug
  - docker-php-ext-enable xdebug
  - curl -sS https://getcomposer.org/installer | php
  - php composer.phar install
  - echo "Running tests"
  - bin/phpunit

server_config:
    stage: server_config
    only:
        - master
    script:
        - echo 'server configuration in progress'
        - echo $SERVER_USER
        - echo $SERVER_HOST
        - echo $MYSQL_USER
        - echo $MYSQL_PASS
        - echo ${PASS}
        - echo $LOUVRE_DATABASE_NAME
        - ssh $SERVER_USER@$SERVER_HOST 'mysql -u $MYSQL_USER -p $MYSQL_PASS -e "CREATE DATABASE $LOUVRE_DATABASE_NAME;"'
        - ssh $SERVER_USER@$SERVER_HOST 'mysql -u $MYSQL_USER -p$MYSQL_PASS -e "CREATE USER \"$LOUVRE_MYSQL_USER\"@\"$LOUVRE_MYSQL_HOST\" IDENTIFIED BY \"$LOUVRE_MYSQL_PASS\";"'
        # GRANT PRIVILEGES #
        - ssh $SERVER_USER@$SERVER_HOST 'mysql -u $MYSQL_USER -p$MYSQL_PASS -e "GRANT ALL PRIVILEGES ON \"$LOUVRE_DATABASE_NAME\".* TO \"$LOUVRE_MYSQL_USER\"@\"$LOUVRE_MYSQL_HOST\";"'
        - ssh $SERVER_USER@$SERVER_HOST "set APP_ENV = $APP_ENV && set DATABASE_URL=mysql://$LOUVRE_MYSQL_USER:$LOUVRE_MYSQL_PASS@$LOUVRE_MYSQL_HOST:$LOUVRE_MYSQL_PORT/$PROJECT_NAME"
        - ssh $SERVER_USER@$SERVER_HOST "mkdir -p /var/www/html/$PROJECT_NAME"
        - ssh $SERVER_USER@$SERVER_HOST "chown -hR $SERVER_USER:root /var/www/html/$PROJECT_NAME && chmod -R 777 /var/www/html/$PROJECT_NAME"
        - echo 'Project folder created'

deploy:
    stage: deploy
    only:
        - master
    script:
        - echo 'Deployment in progress'
        - scp -r ./* $SERVER_USER@$SERVER_HOST:/var/www/html/$PROJECT_NAME
        - ssh $SERVER_USER@$SERVER_HOST "cd /var/www/html/$PROJECT_NAME && composer install"
        - echo 'Dependencies installed'
        - ssh $SERVER_USER@$SERVER_HOST "mv /var/www/html/$PROJECT_NAME/$PROJECT_NAME.conf /etc/apache2/sites-enabled/$PROJECT_NAME.conf && service apache2 restart"
        - echo 'Project server configuration activated'